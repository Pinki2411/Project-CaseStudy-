// <auto-generated />
using System;
using FlightBookingSystem.Models.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightBookingSystem.Migrations
{
    [DbContext(typeof(FlightContext))]
    [Migration("20230218103819_flight")]
    partial class flight
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FlightBookingSystem.Models.Domain.Booking", b =>
                {
                    b.Property<int>("Booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Flight_Id")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passenger_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Passport_No")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReferenceNo")
                        .HasColumnType("int");

                    b.HasKey("Booking_id");

                    b.HasIndex("Email");

                    b.HasIndex("Flight_Id");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("FlightBookingSystem.Models.Domain.Checkin", b =>
                {
                    b.Property<int>("Booking_id")
                        .HasColumnType("int");

                    b.Property<int>("Check_Id")
                        .HasColumnType("int")
                        .HasColumnName("CheckInId");

                    b.Property<int>("Seat_Allocation")
                        .HasColumnType("int");

                    b.HasKey("Booking_id");

                    b.ToTable("checkins");
                });

            modelBuilder.Entity("FlightBookingSystem.Models.Domain.Flight", b =>
                {
                    b.Property<int>("Flight_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FlightId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Flight_Id"), 1L, 1);

                    b.Property<DateTime>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("Fare")
                        .HasColumnType("real");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Flight");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("seatAvailable")
                        .HasColumnType("int");

                    b.HasKey("Flight_Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightBookingSystem.Models.Domain.Registration", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("registrations");
                });

            modelBuilder.Entity("FlightBookingSystem.Models.Domain.Booking", b =>
                {
                    b.HasOne("FlightBookingSystem.Models.Domain.Flight", null)
                        .WithMany("Booking")
                        .HasForeignKey("Booking_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightBookingSystem.Models.Domain.Registration", "Registration")
                        .WithMany("Bookings")
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightBookingSystem.Models.Domain.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("Flight_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("FlightBookingSystem.Models.Domain.Checkin", b =>
                {
                    b.HasOne("FlightBookingSystem.Models.Domain.Booking", "Booking")
                        .WithOne("Checkin")
                        .HasForeignKey("FlightBookingSystem.Models.Domain.Checkin", "Booking_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("FlightBookingSystem.Models.Domain.Booking", b =>
                {
                    b.Navigation("Checkin")
                        .IsRequired();
                });

            modelBuilder.Entity("FlightBookingSystem.Models.Domain.Flight", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("FlightBookingSystem.Models.Domain.Registration", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
